name: Update README recent projects

on:
  schedule:
    - cron: "17 7 * * *"   # diario 07:17 UTC
  workflow_dispatch: {}

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Build projects section
        id: build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const USER = 'OdinoCano'; // <-- cámbialo si tu username cambia
            const { data: repos } = await github.rest.repos.listForUser({
              username: USER,
              sort: 'updated',
              per_page: 10,
            });
            const filtered = repos
              .filter(r => !r.fork && !r.private)
              .slice(0, 5);

            function fmt(r){
              const lang = r.language ? ` · ${r.language}` : '';
              const stars = r.stargazers_count ? ` · ⭐ ${r.stargazers_count}` : '';
              const updated = new Date(r.updated_at).toISOString().slice(0,10);
              const desc = r.description ? r.description.replace(/\r?\n|\r/g, ' ') : '';
              return `- **[${r.name}](${r.html_url})** — ${desc}${lang}${stars} · _updated ${updated}_`;
            }

            const lines = filtered.length
              ? filtered.map(fmt).join('\n')
              : '_No public repositories found._';

            core.setOutput('section', lines);

      - name: Inject into README
        run: |
          FILE="README.md"
          START="<!--START_SECTION:projects-->"
          END="<!--END_SECTION:projects-->"
          CONTENT="${{ steps.build.outputs.section }}"

          awk -v start="$START" -v end="$END" -v repl="$CONTENT" '
            BEGIN{printed=0}
            { 
              if ($0 ~ start) { print; print repl; skip=1; next }
              if ($0 ~ end) { skip=0; printed=1 }
              if (!skip) print
            }
            END{
              if (!printed) {
                print start "\n" repl "\n" end
              }
            }
          ' "$FILE" > tmp && mv tmp "$FILE"

      - name: Commit changes
        run: |
          if git diff --quiet; then
            echo "No changes."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore(readme): refresh recent projects"
          git push